<Application x:Class="AdminPanel.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:s="clr-namespace:System;assembly=mscorlib"
             xmlns:mwt="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
             xmlns:local="clr-namespace:AdminPanel"
             StartupUri="AppWindow/MainWindow.xaml">
    <Application.Resources>
        
        <SolidColorBrush x:Key="colorDark3" Color="#3f474f"/>
        <SolidColorBrush x:Key="colorDark2" Color="#2f373f"/>
        <SolidColorBrush x:Key="colorDark1" Color="#1f272f"/>
        <SolidColorBrush x:Key="colorDark" Color="#070f17"/>
        <SolidColorBrush x:Key="colorLight3" Color="#bfc7cf"/>
        <SolidColorBrush x:Key="colorLight2" Color="#cfd7df"/>
        <SolidColorBrush x:Key="colorLight1" Color="#dfe7ef"/>
        <SolidColorBrush x:Key="colorLight" Color="#eff7ff"/>
        <SolidColorBrush x:Key="colorOrange" Color="#FFFF851A"/>
        <SolidColorBrush x:Key="colorPink" Color="#FFFF3EB8"/>
        <SolidColorBrush x:Key="colorRed" Color="#FFFF5454"/>
        <SolidColorBrush x:Key="colorPurple" Color="#FFB161FF"/>
        <SolidColorBrush x:Key="colorDarkBlue" Color="#FF002F73"/>
        <SolidColorBrush x:Key="colorBlue" Color="#FF3095FB"/>
        <SolidColorBrush x:Key="colorCyan" Color="#FF00AFDC"/>
        <SolidColorBrush x:Key="colorGreen" Color="#FF0CC76B"/>

        <SolidColorBrush x:Key="colorDarkA1" Color="#20eff7ff"/>
        <SolidColorBrush x:Key="colorDarkA2" Color="#10eff7ff"/>

        <LinearGradientBrush x:Key="controlDisabledBackground" StartPoint="0.5,0.4" EndPoint="0.51,0.6" MappingMode="RelativeToBoundingBox" SpreadMethod="Repeat">
            <GradientStop Color="Transparent" Offset="0" />
            <GradientStop Color="Transparent" Offset="0.5" />
            <GradientStop Color="#373f47" Offset="0.5" />
            <GradientStop Color="#373f47" Offset="1" />
        </LinearGradientBrush>

        <s:Double x:Key="controlHeight">28</s:Double>
        <s:Double x:Key="cornerRadius">3</s:Double>
        <CornerRadius x:Key="borderRadius" TopLeft="3" TopRight="3" BottomLeft="3" BottomRight="3"></CornerRadius>

        <Style TargetType="Window">
            <Setter Property="Foreground" Value="{StaticResource colorLight2}"></Setter>
            <Setter Property="FontSize" Value="14"></Setter>
            <Setter Property="FontFamily" Value="./Resources/#Play"></Setter>
            <Setter Property="SnapsToDevicePixels" Value="True"></Setter>
            <Setter Property="Border.Background" Value="{StaticResource colorDark3}"></Setter>
        </Style>

        <Style TargetType="{x:Type local:MainWindow}" BasedOn="{StaticResource {x:Type Window}}"/>
        <Style TargetType="{x:Type local:AdminCreator}" BasedOn="{StaticResource {x:Type Window}}"/>
        <!-- ...other windows... -->

        <Style TargetType="Border">
            <Setter Property="CornerRadius" Value="{StaticResource borderRadius}"></Setter>
        </Style>

        <Style x:Key="BorderPanel" TargetType="Border">
            <Setter Property="CornerRadius" Value="{StaticResource borderRadius}"></Setter>
            <Setter Property="Background" Value="{StaticResource colorDark2}"></Setter>
        </Style>

        <Style TargetType="{x:Type ScrollBar}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ScrollBar">
                        <Grid Name="Bg" SnapsToDevicePixels="True">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1E-05*" />
                            </Grid.RowDefinitions>
                            <Border BorderThickness="0"
                              Background="Transparent"
                              CornerRadius="0"
                              Grid.Row="0" />

                            <Track IsDirectionReversed="True" Name="PART_Track" IsEnabled="{TemplateBinding UIElement.IsMouseOver}" Grid.Row="0">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="ScrollBar.PageUpCommand">
                                        <RepeatButton.Style>
                                            <Style TargetType="RepeatButton">
                                                <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"></Setter>
                                                <Setter Property="Panel.Background" Value="Transparent"></Setter>
                                                <Setter Property="UIElement.Focusable" Value="False"></Setter>
                                                <Setter Property="KeyboardNavigation.IsTabStop" Value="False"></Setter>
                                                <Setter Property="Control.Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="RepeatButton">
                                                            <Rectangle Fill="{TemplateBinding Panel.Background}" Width="{TemplateBinding FrameworkElement.Width}" Height="{TemplateBinding FrameworkElement.Height}" />
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </RepeatButton.Style>
                                    </RepeatButton>
                                </Track.DecreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb>
                                        <Thumb.Style>
                                            <Style TargetType="Thumb">
                                                <Setter Property="Margin" Value="2"></Setter>
                                                <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"></Setter>
                                                <Setter Property="KeyboardNavigation.IsTabStop" Value="False"></Setter>
                                                <Setter Property="Control.Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="Thumb">
                                                            <Border Background="{StaticResource colorDark2}"
                                                                 Name="rectangle"
                                                                 Opacity="0.5"
                                                                 Width="{TemplateBinding FrameworkElement.Width}"
                                                                 Height="{TemplateBinding FrameworkElement.Height}"
                                                                 SnapsToDevicePixels="True" />
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="UIElement.IsMouseOver" Value="True">
                                                                    <Setter Property="Shape.Opacity" TargetName="rectangle" Value="0.75"></Setter>
                                                                </Trigger>
                                                                <Trigger Property="Thumb.IsDragging" Value="True">
                                                                    <Setter Property="Shape.Opacity" TargetName="rectangle" Value="1"></Setter>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Thumb.Style>
                                    </Thumb>
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="ScrollBar.PageDownCommand">
                                        <RepeatButton.Style>
                                            <Style TargetType="RepeatButton">
                                                <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"></Setter>
                                                <Setter Property="Panel.Background" Value="Transparent"></Setter>
                                                <Setter Property="UIElement.Focusable" Value="False"></Setter>
                                                <Setter Property="KeyboardNavigation.IsTabStop" Value="False"></Setter>
                                                <Setter Property="Control.Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="RepeatButton">
                                                            <Rectangle Fill="{TemplateBinding Panel.Background}" Width="{TemplateBinding FrameworkElement.Width}" Height="{TemplateBinding FrameworkElement.Height}" />
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </RepeatButton.Style>
                                    </RepeatButton>
                                </Track.IncreaseRepeatButton>
                            </Track>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ButtonBase" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                        <Border Background="{StaticResource colorDark3}"
                          BorderBrush="{StaticResource colorDark1}"
                          BorderThickness="1"
                          TextBlock.Foreground="{StaticResource colorLight2}"
                          Height="{StaticResource controlHeight}"
                          Name="border"
                          SnapsToDevicePixels="True">
                            <ContentPresenter
                          RecognizesAccessKey="True"
                          Content="{TemplateBinding ContentControl.Content}"
                          ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                          ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                          Name="contentPresenter"
                          HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                          VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                          Focusable="False" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="True"></Trigger>
                            <Trigger Property="UIElement.IsMouseOver" Value="True">
                                <Setter Property="Panel.Background" TargetName="border" Value="{StaticResource colorCyan}"></Setter>
                                <Setter Property="TextElement.Foreground" TargetName="border" Value="{StaticResource colorDark}"></Setter>
                            </Trigger>
                            <Trigger Property="ButtonBase.IsPressed" Value="True">
                                <Setter Property="Opacity" TargetName="border" Value="0.8"></Setter>
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="True">

                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="UIElement.Opacity" TargetName="border" Value="0.4"></Setter>
                                <Setter Property="Background" TargetName="border" Value="{StaticResource controlDisabledBackground}"></Setter>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource colorDark1}"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Foreground" Value="{StaticResource colorLight2}"></Setter>
            <Setter Property="SelectionBrush" Value="{StaticResource colorGreen}"></Setter>
            <Setter Property="SelectionTextBrush" Value="{StaticResource colorDark}"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBoxBase" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib">
                        <Border BorderThickness="1"
                          BorderBrush="{StaticResource colorDark1}"
                          Background="{StaticResource colorDark3}"
                          Name="border"
                          Padding="5 0"
                          Height="{StaticResource controlHeight}"
                          SnapsToDevicePixels="True">
                            <ScrollViewer HorizontalScrollBarVisibility="Hidden"
                                    VerticalScrollBarVisibility="Hidden"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Center"
                                    Name="PART_ContentHost"
                                    Focusable="False" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="UIElement.Opacity" TargetName="border" Value="0.25"></Setter>
                            </Trigger>
                            <Trigger Property="UIElement.IsMouseOver" Value="True">
                                <Setter Property="Border.BorderBrush" TargetName="border" Value="{StaticResource colorDark}"></Setter>
                                <Setter Property="Cursor" TargetName="border" Value="IBeam"></Setter>
                            </Trigger>
                            <Trigger Property="UIElement.IsKeyboardFocused" Value="True">
                                <Setter Property="Border.BorderBrush" TargetName="border" Value="{StaticResource colorCyan}"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="{StaticResource colorLight3}"></Setter>
            <Setter Property="FontStyle" Value="Italic"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Label" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                        <Border BorderThickness="{TemplateBinding Border.BorderThickness}"
                          Padding="{TemplateBinding Control.Padding}"
                          BorderBrush="{TemplateBinding Border.BorderBrush}"
                          Background="{TemplateBinding Panel.Background}"
                          SnapsToDevicePixels="True">
                            <ContentPresenter RecognizesAccessKey="True"
                                        Content="{TemplateBinding ContentControl.Content}"
                                        ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                        ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                        HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                        SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" Value="{StaticResource colorDark3}"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid Name="templateRoot" SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="0" MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
                            </Grid.ColumnDefinitions>

                            <Popup IsOpen="{TemplateBinding IsDropDownOpen}"
                             Placement="Bottom" 
                             PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                             AllowsTransparency="True" 
                             Name="PART_Popup" 
                             Margin="1" 
                             Grid.ColumnSpan="2">
                                <mwt:SystemDropShadowChrome
                              Color="#00FFFFFF"
                              Name="shadow"
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                    <Border BorderThickness="1"
                                      BorderBrush="{StaticResource colorDark}"
                                      Background="{StaticResource colorDark2}"
                                      Name="DropDownBorder">
                                        <ScrollViewer Name="DropDownScrollViewer">
                                            <Grid Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                <Canvas Name="canvas" Width="0" Height="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                                                    <Rectangle Fill="{x:Null}" Name="OpaqueRect" Width="Auto" Height="Auto" />
                                                </Canvas>
                                                <ItemsPresenter Name="ItemsPresenter"
                                                          Margin="1"
                                                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                                          KeyboardNavigation.DirectionalNavigation="Contained" />
                                            </Grid>
                                        </ScrollViewer>
                                    </Border>
                                </mwt:SystemDropShadowChrome>
                            </Popup>

                            <ToggleButton BorderBrush="{TemplateBinding Border.BorderBrush}" 
                                    BorderThickness="{TemplateBinding Border.BorderThickness}" 
                                    Background="{TemplateBinding Panel.Background}"
                                    Name="toggleButton" 
                                    IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                    ClickMode="Press"
                                    Grid.ColumnSpan="2">
                                <ToggleButton.Style>
                                    <Style TargetType="ToggleButton">
                                        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"></Setter>
                                        <Setter Property="KeyboardNavigation.IsTabStop" Value="False"></Setter>
                                        <Setter Property="UIElement.Focusable" Value="False"></Setter>
                                        <Setter Property="ButtonBase.ClickMode" Value="Press"></Setter>
                                        <Setter Property="ButtonBase.Height" Value="{StaticResource controlHeight}"></Setter>

                                        <Setter Property="Control.Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="ToggleButton">
                                                    <Border BorderThickness="1"
                                                      BorderBrush="{StaticResource colorDark1}"
                                                      Background="{StaticResource colorDark3}"
                                                      Name="templateRoot"
                                                      SnapsToDevicePixels="True">
                                                        <Border BorderThickness="1"
                                                          Background="Transparent"
                                                          Name="splitBorder"
                                                          Width="28"
                                                          Margin="0"
                                                          HorizontalAlignment="Right"
                                                          SnapsToDevicePixels="True">
                                                            <Path Data="F1M0,0L2.667,2.66665 5.3334,0 5.3334,-1.78168 2.6667,0.88501 0,-1.78168 0,0z"
                                                            Fill="{StaticResource colorLight3}"
                                                            Name="Arrow"
                                                            Margin="0,0,0,0"
                                                            HorizontalAlignment="Center"
                                                            VerticalAlignment="Center" />
                                                        </Border>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                                                            <Setter Property="Shape.Fill" TargetName="Arrow" Value="{StaticResource colorLight1}"></Setter>
                                                        </Trigger>

                                                        <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true">
                                                            <Setter Property="Panel.Background" TargetName="templateRoot" Value="{StaticResource colorDark2}"></Setter>
                                                            <Setter Property="Border.BorderBrush" TargetName="templateRoot" Value="{StaticResource colorDark}"></Setter>
                                                        </DataTrigger>

                                                        <Trigger Property="ButtonBase.IsPressed" Value="True">
                                                            <Setter Property="Shape.Fill" TargetName="Arrow" Value="{StaticResource colorDark1}"></Setter>
                                                        </Trigger>

                                                        <!-- Нажатие когда открыт -->
                                                        <DataTrigger Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="true">
                                                            <Setter Property="Panel.Background" TargetName="templateRoot" Value="{StaticResource colorDark3}"></Setter>
                                                            <Setter Property="Border.BorderBrush" TargetName="templateRoot" Value="{StaticResource colorDark1}"></Setter>
                                                        </DataTrigger>

                                                        <Trigger Property="UIElement.IsEnabled" Value="False">
                                                            <Setter Property="Shape.Fill" TargetName="Arrow" Value="{StaticResource colorDark}"></Setter>
                                                        </Trigger>

                                                        <DataTrigger Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="false">
                                                            <Setter Property="Panel.Background" TargetName="templateRoot" Value="{StaticResource controlDisabledBackground}"></Setter>
                                                            <Setter Property="Border.BorderBrush" TargetName="templateRoot" Value="{StaticResource colorDark1}"></Setter>
                                                            <Setter Property="Panel.Opacity" TargetName="templateRoot" Value="0.4"></Setter>
                                                        </DataTrigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>

                            <ContentPresenter 
                          TextElement.Foreground="{StaticResource colorLight2}"
                          Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                          ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                          ContentStringFormat="{TemplateBinding ComboBox.SelectionBoxItemStringFormat}"
                          Name="contentPresenter"
                          Margin="8 0"
                          HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                          VerticalAlignment="Center"
                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                          IsHitTestVisible="False"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Popup.HasDropShadow" SourceName="PART_Popup" Value="True">
                                <Setter Property="FrameworkElement.Margin" TargetName="shadow" Value="0,0,5,5"></Setter>
                                <Setter Property="mwt:SystemDropShadowChrome.Color" TargetName="shadow" Value="#000"></Setter>
                            </Trigger>

                            <Trigger Property="ItemsControl.HasItems" Value="False">
                                <Setter Property="FrameworkElement.Height" TargetName="DropDownBorder" Value="60"></Setter>
                            </Trigger>

                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="ItemsControl.IsGrouping" Value="True"></Condition>
                                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"></Condition>
                                </MultiTrigger.Conditions>
                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"></Setter>
                            </MultiTrigger>

                            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="False">
                                <Setter Property="Canvas.Top" TargetName="OpaqueRect">
                                    <Setter.Value>
                                        <Binding Path="VerticalOffset" ElementName="DropDownScrollViewer" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Canvas.Left" TargetName="OpaqueRect">
                                    <Setter.Value>
                                        <Binding Path="HorizontalOffset" ElementName="DropDownScrollViewer" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ComboBoxItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border BorderThickness="0"
                          Padding="{TemplateBinding Control.Padding}"
                          Name="border"
                          TextElement.Foreground="{StaticResource colorLight2}"
                          SnapsToDevicePixels="True">
                            <ContentPresenter Content="{TemplateBinding ContentControl.Content}"
                                        ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                        ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                        HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                        SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="border" Value="{StaticResource colorLight3}"></Setter>
                            </Trigger>

                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelected" Value="False"></Condition>
                                    <Condition Property="UIElement.IsMouseOver" Value="True"></Condition>
                                    <Condition Property="UIElement.IsKeyboardFocused" Value="False"></Condition>
                                </MultiTrigger.Conditions>
                                <Setter Property="Panel.Background" TargetName="border" Value="{StaticResource colorCyan}"></Setter>
                                <Setter Property="TextElement.Foreground" TargetName="border" Value="{StaticResource colorDark}"></Setter>
                            </MultiTrigger>

                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelected" Value="True"></Condition>
                                    <Condition Property="UIElement.IsMouseOver" Value="False"></Condition>
                                    <Condition Property="UIElement.IsKeyboardFocused" Value="True"></Condition>
                                </MultiTrigger.Conditions>
                                <Setter Property="Panel.Background" TargetName="border" Value="{StaticResource colorDark}"></Setter>
                                <Setter Property="TextElement.Foreground" TargetName="border" Value="{StaticResource colorLight1}"></Setter>
                            </MultiTrigger>

                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelected" Value="True"></Condition>
                                    <Condition Property="UIElement.IsMouseOver" Value="True"></Condition>
                                </MultiTrigger.Conditions>
                                <Setter Property="Panel.Background" TargetName="border" Value="{StaticResource colorDark}"></Setter>
                                <Setter Property="TextElement.Foreground" TargetName="border" Value="{StaticResource colorLight1}"></Setter>
                            </MultiTrigger>

                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelected" Value="True"></Condition>
                                    <Condition Property="UIElement.IsMouseOver" Value="False"></Condition>
                                    <Condition Property="UIElement.IsKeyboardFocused" Value="False"></Condition>
                                </MultiTrigger.Conditions>
                                <Setter Property="Panel.Background" TargetName="border" Value="{StaticResource colorDark}"></Setter>
                                <Setter Property="TextElement.Foreground" TargetName="border" Value="{StaticResource colorLight1}"></Setter>
                            </MultiTrigger>

                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelected" Value="False"></Condition>
                                    <Condition Property="UIElement.IsMouseOver" Value="False"></Condition>
                                    <Condition Property="UIElement.IsKeyboardFocused" Value="True"></Condition>
                                </MultiTrigger.Conditions>
                                <Setter Property="Panel.Background" TargetName="border" Value="{StaticResource colorCyan}"></Setter>
                                <Setter Property="TextElement.Foreground" TargetName="border" Value="{StaticResource colorDark}"></Setter>
                            </MultiTrigger>

                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelected" Value="False"></Condition>
                                    <Condition Property="UIElement.IsMouseOver" Value="True"></Condition>
                                    <Condition Property="UIElement.IsKeyboardFocused" Value="True"></Condition>
                                </MultiTrigger.Conditions>
                                <Setter Property="Panel.Background" TargetName="border" Value="{StaticResource colorCyan}"></Setter>
                                <Setter Property="TextElement.Foreground" TargetName="border" Value="{StaticResource colorDark}"></Setter>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ListView}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBox">
                        <Border BorderThickness="1"
                          Padding="2"
                          BorderBrush="{StaticResource colorDark1}"
                          Background="{StaticResource colorDark3}"
                          Name="Bd"
                          SnapsToDevicePixels="True">
                            <ScrollViewer Padding="{TemplateBinding Control.Padding}" Focusable="False">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="UIElement.Opacity" TargetName="Bd" Value="0.25"></Setter>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="ItemsControl.IsGrouping" Value="True"></Condition>
                                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="False"></Condition>
                                </MultiTrigger.Conditions>
                                <Setter Property="ScrollViewer.CanContentScroll" Value="False"></Setter>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ListViewItem}">
            <Setter Property="HorizontalContentAlignment" Value="Stretch"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border BorderThickness="0"
                          Padding="0"
                          BorderBrush="{x:Null}"
                          Name="Bd"
                          SnapsToDevicePixels="True">
                            <ContentPresenter Content="{TemplateBinding ContentControl.Content}"
                                        ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                        ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                        HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                        SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsMouseOver" Value="True">
                                <Setter Property="Panel.Background" TargetName="Bd" Value="{StaticResource colorDarkA2}"></Setter>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="False"></Condition>
                                    <Condition Property="Selector.IsSelected" Value="True"></Condition>
                                </MultiTrigger.Conditions>
                                <Setter Property="Panel.Background" TargetName="Bd" Value="{StaticResource colorDarkA2}"></Setter>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="True"></Condition>
                                    <Condition Property="Selector.IsSelected" Value="True"></Condition>
                                </MultiTrigger.Conditions>
                                <Setter Property="Panel.Background" TargetName="Bd" Value="{StaticResource colorDarkA1}"></Setter>
                            </MultiTrigger>
                            <!-- Тут что-то более оригинальное надо -->
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="Panel.Background" TargetName="Bd" Value="{StaticResource colorDark1}"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Application.Resources>
</Application>
